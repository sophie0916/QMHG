tN <- 2*N1
ef1 <- 1/tN
for (i in 1:200) {
ef1[i+1] <- 1/tN + (1-1/tN)*ef1[i]
}
ef1
N2 <- 50
tN <- 2*N2
ef2 <- 1/tN
for (i in 1:200) {
ef2[i+1] <- 1/tN + (1-1/tN)*ef2[i]
}
ef2
N3 <- 100
tN <- 2*N3
ef3 <- 1/tN
for (i in 1:200) {
ef3[i+1] <- 1/tN + (1-1/tN)*ef3[i]
}
ef3
N4 <- 500
tN <- 2*N4
ef4 <- 1/tN
for (i in 1:200) {
ef4[i+1] <- 1/tN + (1-1/tN)*ef4[i]
}
ef4
plot(1:201, ef1, type = "l")
points(1:201, ef2, type = "l")
points(1:201, ef3, type = "l")
points(1:201, ef4, type = "l")
plot(1:201, ef1, type = "l", col="red")
points(1:201, ef2, type = "l", col="yellow")
points(1:201, ef3, type = "l", col="green")
points(1:201, ef4, type = "l", col="blue")
pedDF <- data.frame(
id = c("Levi", "Leona", "Rosalynne", "Ben", "Leroy", "Gina", "Jacklyn", "Matt", "Amy", "Austin", "Floyd"),
dadid = c(NA, NA, "Levi", "Levi", "Ben", "Ben", "Leroy", "Leroy", "Matt", "Matt", "Austin"),
momid = c(NA, NA, "Leona", "Leona", "Rosalynne", "Rosalynne", "Gina", "Gina", "Jacklyn", "Jacklyn", "Amy"),
sex = c("male", "female", "female", "male", "male", "female", "female", "male", "female", "male", "male")
)
pedigreeObject <- with(pedDF, pedigree(id,dadid,momid,sex))
plot(pedigreeObject)
library(kinship2)
library(Matrix)
library(quadprog)
library(kinship2)
pedDF <- data.frame(
id = c("Levi", "Leona", "Rosalynne", "Ben", "Leroy", "Gina", "Jacklyn", "Matt", "Amy", "Austin", "Floyd"),
dadid = c(NA, NA, "Levi", "Levi", "Ben", "Ben", "Leroy", "Leroy", "Matt", "Matt", "Austin"),
momid = c(NA, NA, "Leona", "Leona", "Rosalynne", "Rosalynne", "Gina", "Gina", "Jacklyn", "Jacklyn", "Amy"),
sex = c("male", "female", "female", "male", "male", "female", "female", "male", "female", "male", "male")
)
pedigreeObject <- with(pedDF, pedigree(id,dadid,momid,sex))
plot(pedigreeObject)
pedDF <- data.frame(
id = c("Levi", "Leona", "Rosalynne", "Ben", "Jacklyn", "Matt", "Amy", "Austin", "Floyd"),
dadid = c(NA, NA, "Levi", "Levi", "Ben", "Ben", "Matt", "Matt", "Austin"),
momid = c(NA, NA, "Leona", "Leona", "Rosalynne", "Rosalynne", "Jacklyn", "Jacklyn", "Amy"),
sex = c("male", "female", "female", "male", "female", "male", "female", "male", "male")
)
pedigreeObject <- with(pedDF, pedigree(id,dadid,momid,sex))
plot(pedigreeObject)
F_ln <- 0
F_lv <- 0
F_j <- (1/2)^3*(2+F_lv) + (1/2)^3*(2+F_ln)
F_m <- (1/2)^3*(2+F_lv) + (1/2)^3*(2+F_ln)
F_f <- (1/2)^3*(2+F_m) + (1/2)^3*(2+F_j)
F_f
F_ln <- 0
F_lv <- 0
F_j <- (1/2)^3*(1+F_lv) + (1/2)^3*(1+F_ln)
F_m <- (1/2)^3*(1+F_lv) + (1/2)^3*(1+F_ln)
F_f <- (1/2)^3*(1+F_m) + (1/2)^3*(1+F_j)
F_f
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/Assignment05_SophieYeonSooKim.Rmd")
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/week06/Assignment06_SophieYeonSooKim.Rmd")
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/week06/Assignment06_SophieYeonSooKim.Rmd")
N1 <- 10
tN <- 2*N1
ef1 <- 1/tN
for (i in 1:200) {
ef1[i+1] <- 1/tN + (1-1/tN)*ef1[i]
}
N2 <- 50
tN <- 2*N2
ef2 <- 1/tN
for (i in 1:200) {
ef2[i+1] <- 1/tN + (1-1/tN)*ef2[i]
}
N3 <- 100
tN <- 2*N3
ef3 <- 1/tN
for (i in 1:200) {
ef3[i+1] <- 1/tN + (1-1/tN)*ef3[i]
}
N4 <- 500
tN <- 2*N4
ef4 <- 1/tN
for (i in 1:200) {
ef4[i+1] <- 1/tN + (1-1/tN)*ef4[i]
}
plot(1:201, ef1, type = "l", col="red")
points(1:201, ef2, type = "l", col="yellow")
points(1:201, ef3, type = "l", col="green")
points(1:201, ef4, type = "l", col="blue")
legend("topright", c("N = 10","N = 50", "N = 100", "N = 500"), pch = c(1, 2, 3, 4), col = c("red", "yellow", "green", "blue"))
legend("topright", c("N = 10","N = 50", "N = 100", "N = 500"), pch = c(16, 19, 19, 16 ), col = c("red", "yellow", "green", "blue"))
legend("topright", c("N = 10","N = 50", "N = 100", "N = 500"), pch = c(20, 20, 20, 20), col = c("red", "yellow", "green", "blue"))
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/week06/Assignment06_SophieYeonSooKim.Rmd")
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/week06/Assignment06_SophieYeonSooKim.Rmd")
n <- 17 + 55 + 12
AA <- 17/n
AG <- 55/n
GG <- 12/n
p <- AA + 0.5*AG
q <- GG + 0.5*AG
HWE <- p^2 + 2*p*q + q^2
HWE
p
q
p^2
obs1 <- c(17, 55, 12)/n
exp1 <- c(0.2809, 0.4982, 0.2209)*n
chi1 <- c()
for(i in 1:3){
chi1[i] <- (obs1[i] - exp1[i]^2) / (exp1[i])
}
sum(chi1)
o1 <- c(17,55,12)
e1 <- c(0.2809*84,0.4982*84,0.2209*84)
chisquare1 <- c()
for(i in 1:3){chisquare1[i] <- (o1[i]-e1[i]^2)/(e1[i])}
sum(chisquare1)
(17/84)^2
17^2/84
q^2
2*p*q
sqrt(17/84)
17/84
obs1 <- c(17, 55, 12)/n
exp1 <- c(0.2809, 0.4982, 0.2209)*n
chi1 <- c()
for(i in 1:3){
chi1[i] <- (obs1[i] - exp1[i]^2) / (exp1[i])
}
sum(chi1) #chi-square=8.30, degrees of freedom=1
1-pchisq(8.30,df=1)
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/week06/Assignment06_SophieYeonSooKim.Rmd")
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/week06/Assignment06_SophieYeonSooKim.Rmd")
o2 <- c(44,13,0)
e2 <- c(44.74,11.51,0.74)
chisquare2 <- c()
for(i in 1:3){chisquare2[i] <- (o2[i]-e2[i]^2)/(e2[i])}
sum(chisquare2) #chi=0.945, df=1
1-pchisq(0.945,df=1) #pvalue=0.33, h-null cannot be rejected
# h-null= there is no relationship between A and T of the Hb gene
o1 <- c(17,55,12)
e1 <- c(0.2809*84,0.4982*84,0.2209*84)
chisquare1 <- c()
for(i in 1:3){chisquare1[i] <- (o1[i]-e1[i]^2)/(e1[i])}
sum(chisquare1) #chi-square=8.30, degrees of freedom=1
1-pchisq(8.30,df=1)
sum1
sum(chisquare1)
1-pchisq(8.3, df = 1)
```
Since pvalue < 0.05, reject the null hypothesis.
1-pchisq(8.3, df = 1)
sum2 <- sum(chi2)
sum2
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/week06/Assignment06_SophieYeonSooKim.Rmd")
setwd()
setwd("Documents/2016_Spring/Quantitative Methods in Human Genetics/week09/")
file <- read.csv("tumor.txt")
file
file <- read.csv("tumor.txt", header = T)
file
file <- read.csv("tumor.txt", header = F)
file
mean(file)
file$V1
mean(file$V1)
length(file)
length(file$V1)
sd(file$V1)
?pt()
itv <- tstat * SEy
lbound <- ybar - itv
ubound <- ybar + itv
tdata <- read.csv("tumor.txt", header = F)
ybar <- mean(tdata$V1)
m <- 0
SEy <- sd(tdata$V1) / sqrt(length(tdata$V1))
tstat <- (ybar - m) / SEy
tstat
df <- length(tdata$V1) - 1
pval <- 1- pt(tstat, df)
itv <- tstat * SEy
lbound <- ybar - itv
ubound <- ybar + itv
lbound
ubound
pval
df <- length(tdata$V1) - 1
pval <- 1- pt(tstat, df)*2
pval
pval <- 1- pt(tstat, df) + pt(-tstat,df)
pval
t.test(tdata$V1, alternative = "two.sided")
df <- length(tdata$V1) - 1
pval <- 1- pt(tstat, df) + pt(-tstat,df)
itv <- qt(0.05) * SEy
lbound <- ybar - itv
ubound <- ybar + itv
lbound
itv <- qt(0.05, df) * SEy
lbound <- ybar - itv
ubound <- ybar + itv
lbound
ubound
itv
itv <- qt(0.05, df = 19) * SEy
lbound <- ybar - itv
ubound <- ybar + itv
lbound
ubound
itv <- qt(0.025, df = 19) * SEy
lbound <- ybar - itv
ubound <- ybar + itv
lbound
ubound
itv
g <- read.data("test.txt")
g <- read.csv("test.txt")
g
mean(gdata$TT)
mean(g$TT)
g$TT.AT
mean(na.omit(g$TT))
gdata <- read.table("test.txt", header = T)
gdata <- read.table("test.txt", header = T)
mean(na.omit(gdata$TT))
length(gdata$TT)
length(na.omit(gdata$TT))
?var()
var(gdata$TT)
g1 <- na.omit(gdata$TT)
g2 <- gdata$AT
var(g1)
gdata <- read.table("test.txt", header = T)
g1 <- na.omit(gdata$TT)
g2 <- gdata$AT
m1 <- mean(g1)
m2 <- mean(g2)
n1 <- length(g1)
n2 <- length(g2)
df1 <- n1-1
df2 <- n2-1
var1 <- var(g1)
var2 <- var(g2)
sp <- (df1*var1 + df2*var2) / (df1 + df2)
SE <- sqrt((sp^2) * ( 1/n1 + 1/n2))
t <- (m1 - m2) / SE
t
var1 <- sd(g1)^2
var2 <- sd(g2)^2
sp <- (df1*var1 + df2*var2) / (df1 + df2)
SE <- sqrt((sp^2) * ( 1/n1 + 1/n2))
t <- (m1 - m2) / SE
t
SE <- sqrt(sp * ( 1/n1 + 1/n2))
t <- (m1 - m2) / SE
t
tpval <- 1- pt(t, df1+df2) + pt(-t,df1+df2)
tpval
t.test(g1, g2, alternative = "two,sided")
t.test(g1, g2, alternative = "two.sided")
t.test(g1, g2, alternative = "two.sided", var.equal = T)
t.test(g1, g2, alternative = "two.sided")
?quantile()
zed <- rnorm(10000, 500)
for (i in 1:10000) {
s1 <- sample(zed, 100)
s2 <- sample(zed, 100)
samplet[i] <- t.test(s1, s2, var.equal = T)
}
samplet <- c()
for (i in 1:10000) {
s1 <- sample(zed, 100)
s2 <- sample(zed, 100)
samplet[i] <- t.test(s1, s2, var.equal = T)
}
threshold <- quantile(zed, c(0.025, 0.975))
warnings()
for (i in 1:10000) {
s1 <- sample(zed, 100)
s2 <- sample(zed, 100)
samplet[i] <- t.test(s1, s2, var.equal = T)$statistic
}
threshold <- quantile(zed, c(0.025, 0.975))
threshold
qt(0.025, df = 198)
qt(0.975, df = 198)
itv <- qt(0.025, df = 19) * SEy
lbound <- ybar + itv
ubound <- ybar - itv
lbound
ubound
plot(density(samplet))
samplet <- c()
for (i in 1:10000) {
s1 <- sample(zed, 100)
s2 <- sample(zed, 100)
samplet[i] <- t.test(s1, s2, var.equal = T)$statistic
}
plot(density(samplet))
lines(density(sample))
for (i in 1:10000) {
s1 <- sample(zed, 100)
s2 <- sample(equis, 100)
sample[i] <- t.test(s1, s2, var.equal = T)$statistic
}
equis <- rnorm(10000, 100)
sample <- c()
for (i in 1:10000) {
s1 <- sample(zed, 100)
s2 <- sample(equis, 100)
sample[i] <- t.test(s1, s2, var.equal = T)$statistic
}
lines(density(sample))
t
plot(density(samplet))
lines(density(sample))
equis <- rnorm(10000, 500.1)
sample <- c()
for (i in 1:10000) {
s1 <- sample(zed, 100)
s2 <- sample(equis, 100)
sample[i] <- t.test(s1, s2, var.equal = T)$statistic
}
plot(density(samplet))
lines(density(sample))
equis <- rnorm(10000, 500.01)
sample <- c()
for (i in 1:10000) {
s1 <- sample(zed, 100)
s2 <- sample(equis, 100)
sample[i] <- t.test(s1, s2, var.equal = T)$statistic
}
lines(density(sample))
equis <- rnorm(10000, 501)
sample <- c()
for (i in 1:10000) {
s1 <- sample(zed, 100)
s2 <- sample(equis, 100)
sample[i] <- t.test(s1, s2, var.equal = T)$statistic
}
plot(density(samplet))
lines(density(sample))
equis <- rnorm(10000, 500.7)
sample <- c()
for (i in 1:10000) {
s1 <- sample(zed, 100)
s2 <- sample(equis, 100)
sample[i] <- t.test(s1, s2, var.equal = T)$statistic
}
plot(density(samplet))
lines(density(sample))
equis <- rnorm(10000, 500.5)
sample <- c()
for (i in 1:10000) {
s1 <- sample(zed, 100)
s2 <- sample(equis, 100)
sample[i] <- t.test(s1, s2, var.equal = T)$statistic
}
plot(density(samplet))
lines(density(sample))
head(sample[i])
head(sample)
threshold
comp <- c()
for (i in 10000) {
comp[i] <- (sample[i] < threshold[1] | sample[i] > threshold[2])
}
head(comp)
head(sample)
compare <- c()
for (i in 10000) {
compare[i] <- (sample[i] < threshold[1] | sample[i] > threshold[2])
}
head(compare)
comp <- c()
for (i in 10000) {
if (sample[i] < threshold[1] | sample[i] > threshold[2]) {
comp[i] <- TRUE
}
else {
comp[i] <- FALSE
}
}
head(comp)
?comp
comp <- c()
for (i in 10000) {
if ((sample[i] < threshold[1]) | (sample[i] > threshold[2])) {
comp[i] <- TRUE
}
else {
comp[i] <- FALSE
}
}
head(comp)
comp <- c()
for (i in 10000) {
if ((equis[i] < threshold[1]) | (equis[i] > threshold[2])) {
comp[i] <- TRUE
}
else {
comp[i] <- FALSE
}
}
head(comp)
head(equis)
head(sample)
comp <- c()
for (i in 10000) {
if ((equis[i] < threshold[1]) | (equis[i] > threshold[2])) {
comp[i] <- 1
}
else {
comp[i] <- 2
}
}
head(comp)
comp <- c()
for (i in 10000) {
if (equis[i] < threshold[1]){
comp[i] <- TRUE
}
else {
comp[i] <- FALSE
}
}
head(comp)
equis[1] < threshold[1]
| (equis[i] > threshold[2]))
comp <- c()
for (i in 10000) {
comp[i] <- (equis[i] < threshold[1])
}
head(comp)
comp <- TRUE
for (i in 10000) {
comp[i] <- (equis[i] < threshold[1])
}
head(comp)
result <- TRUE
for (i in 10000) {
result[i] <- (equis[i] < threshold[1])
}
head(result)
result <- c()
for (i in 10000) {
result[i] <- (equis[i] < threshold[1])
}
head(result)
equis[1] < threshold[1]
threshold[,1]
thresold$"2.5%"
threshold$"2.5%"
threshold <- quantile(zed, c(0.025, 0.975))
threshold
result <- c()
for (i in 10000) {
result[i] <- (equis[i] < 498.0461) | (equis[i] > 501.9286)
}
head(result)
(equis[i] < 498.0461) | (equis[i] > 501.9286)
(equis[1] < 498.0461) | (equis[1] > 501.9286)
sum = 0
for (i in 10000) {
sum <- sum + (equis[i] < 498.0461) | (equis[i] > 501.9286)
}
sum
result = 0
for (i in 10000) {
result <- result + (equis[i] < 498.0461) | (equis[i] > 501.9286)
}
result
(equis[3] < 498.0461) | (equis[3] > 501.9286)
result <- c()
for (i in 10000) {
result[i] <-  (equis[i] < 498.0461) | (equis[i] > 501.9286)
}
head(result)
result
sum(na.omit(result))
sum(equis < 498.0461) + sum(equis > 501.9286)
render("Assignment09_SophieYeonSooKim.Rmd")
render("Assignment09_SophieYeonSooKim.Rmd")
render("Assignment09_SophieYeonSooKim.Rmd")
render("Assignment09_SophieYeonSooKim.Rmd")
render("Assignment09_SophieYeonSooKim.Rmd")
render("Assignment09_SophieYeonSooKim.Rmd")
plot(density(samplet), main = "t-statistic distributions of population Zed and Equis", xlab = "t-score", col = "red")
lines(density(sample), col = "blue")
legend("topright", c("Zed","Equis"),  col=c("red", "blue"))
lty=c(1,1), lwd=c(1,1),
legend("topright", c("Zed","Equis"), lty=c(1,1), lwd=c(1,1), col=c("red", "blue"))
render("Assignment09_SophieYeonSooKim.Rmd")
render("Assignment09_SophieYeonSooKim.Rmd")
