tN <- 2*N3
ef3 <- c()
for (i in 1:200) {
ef3[i+1] <- 1/tN + (1-1/tN)*ef3[i]
}
ef3
N4 <- 500
tN <- 2*N4
ef4 <- c()
for (i in 1:200) {
ef4[i+1] <- 1/tN + (1-1/tN)*ef4[i]
}
ef4
plot(1:201, ef1, type = "l")
plot(ef1, type = "l")
plot(1:201, ef1, type = "l")
N <- 2
tN <- 2*N
eff <- 1/tN
ef[2] <- 1/tN + (1-1/tN)*ef[1]
for (i in 1:200) {
ef[i+1] <- 1/tN + (1-1/tN)*ef[i]
}
ef
plot(1:202, eff)
plot(1:201, eff)
plot(1:201, ef)
plot(1:201, ef, type = "l")
tN
N1 <- 10
tN <- 2*N1
ef1 <- c()
for (i in 1:200) {
ef1[i+1] <- 1/tN + (1-1/tN)*ef1[i]
}
ef1
N2 <- 50
tN <- 2*N2
ef2 <- c()
for (i in 1:200) {
ef2[i+1] <- 1/tN + (1-1/tN)*ef2[i]
}
ef2
N3 <- 100
tN <- 2*N3
ef3 <- c()
for (i in 1:200) {
ef3[i+1] <- 1/tN + (1-1/tN)*ef3[i]
}
ef3
N4 <- 500
tN <- 2*N4
ef4 <- c()
for (i in 1:200) {
ef4[i+1] <- 1/tN + (1-1/tN)*ef4[i]
}
ef4
plot(1:201, ef1, type = "l")
points(1:201, ef2, type = "l")
line(1:201, ef3, type = "l")
line(1:201, ef4, type = "l")
tN
plot(k, LODscore, type="l",xlab="recombination fraction",ylab="log-likelihood",main="Likelihood Profile")
N1 <- 10
tN <- 2*N1
ef1 <- 1/tN
for (i in 1:200) {
ef1[i+1] <- 1/tN + (1-1/tN)*ef1[i]
}
plot(1:201, ef1, type = "l")
N1 <- 10
tN <- 2*N1
ef1 <- 1/tN
for (i in 1:200) {
ef1[i+1] <- 1/tN + (1-1/tN)*ef1[i]
}
ef1
N2 <- 50
tN <- 2*N2
ef2 <- c()
for (i in 1:200) {
ef2[i+1] <- 1/tN + (1-1/tN)*ef2[i]
}
ef2
N3 <- 100
tN <- 2*N3
ef3 <- c()
for (i in 1:200) {
ef3[i+1] <- 1/tN + (1-1/tN)*ef3[i]
}
ef3
N4 <- 500
tN <- 2*N4
ef4 <- c()
for (i in 1:200) {
ef4[i+1] <- 1/tN + (1-1/tN)*ef4[i]
}
ef4
plot(1:201, ef1, type = "l")
N1 <- 10
tN <- 2*N1
for (i in 1:200) {
ef1[i+1] <- 1/tN + (1-1/tN)*ef1[i]
}
ef1
N2 <- 50
tN <- 2*N2
ef2 <- c()
for (i in 1:200) {
ef2[i+1] <- 1/tN + (1-1/tN)*ef2[i]
}
ef2
N3 <- 100
tN <- 2*N3
ef3 <- c()
for (i in 1:200) {
ef3[i+1] <- 1/tN + (1-1/tN)*ef3[i]
}
ef3
N4 <- 500
tN <- 2*N4
ef4 <- c()
for (i in 1:200) {
ef4[i+1] <- 1/tN + (1-1/tN)*ef4[i]
}
ef4
plot(1:201, ef1, type = "l")
points(1:201, ef2, type = "l")
points(1:201, ef3, type = "l")
points(1:201, ef4, type = "l")
plot(1:201, ef1, type = "l")
points(1:201, ef2, type = "l")
points(1:201, ef3, type = "l")
points(1:201, ef4, type = "l")
N1 <- 10
tN <- 2*N1
for (i in 1:200) {
ef1[i+1] <- 1/tN + (1-1/tN)*ef1[i]
}
ef1
N2 <- 50
tN <- 2*N2
for (i in 1:200) {
ef2[i+1] <- 1/tN + (1-1/tN)*ef2[i]
}
ef2
N3 <- 100
tN <- 2*N3
for (i in 1:200) {
ef3[i+1] <- 1/tN + (1-1/tN)*ef3[i]
}
ef3
N4 <- 500
tN <- 2*N4
for (i in 1:200) {
ef4[i+1] <- 1/tN + (1-1/tN)*ef4[i]
}
ef4
plot(1:201, ef1, type = "l")
points(1:201, ef2, type = "l")
points(1:201, ef3, type = "l")
points(1:201, ef4, type = "l")
N2 <- 50
tN <- 2*N2
for (i in 1:200) {
ef2[i+1] <- 1/tN + (1-1/tN)*ef2[i]
}
ef2
tN
ef2
ef2[0]
ef2[1]
N1 <- 10
tN <- 2*N1
for (i in 1:200) {
ef1[i+1] <- 1/tN + (1-1/tN)*ef1[i]
}
ef1
N2 <- 50
tN <- 2*N2
for (i in 1:200) {
ef2[i+1] <- 1/tN + (1-1/tN)*ef2[i]
}
ef2
N2 <- 50
tN <- 2*N2
ef2
for (i in 1:200) {
ef2[i+1] <- 1/tN + (1-1/tN)*ef2[i]
}
ef2
N2 <- 50
tN <- 2*N2
ef2 <- c()
for (i in 1:200) {
ef2[i+1] <- 1/tN + (1-1/tN)*ef2[i]
}
ef2
N1 <- 10
tN <- 2*N1
for (i in 1:200) {
ef1[i+1] <- 1/tN + (1-1/tN)*ef1[i]
}
ef1
N2 <- 50
tN <- 2*N2
ef2 <- 1/tN
ef2[2] <- 1/tN + (1-1/tN)*ef2[1]
for (i in 1:200) {
ef2[i+1] <- 1/tN + (1-1/tN)*ef2[i]
}
ef2
ef <- NULL
ef
ef2 <- NULL
ef
ef2
N2 <- 50
tN <- 2*N2
ef2 <- 1/tN
for (i in 1:200) {
ef2[i+1] <- 1/tN + (1-1/tN)*ef2[i]
}
ef2
ef2 <- NULL
N2 <- 50
tN <- 2*N2
for (i in 1:200) {
ef2[i+1] <- 1/tN + (1-1/tN)*ef2[i]
}
ef2
N1 <- 10
tN <- 2*N1
ef1 <- 1/tN
for (i in 1:200) {
ef1[i+1] <- 1/tN + (1-1/tN)*ef1[i]
}
ef1
N2 <- 50
tN <- 2*N2
ef2 <- 1/tN
for (i in 1:200) {
ef2[i+1] <- 1/tN + (1-1/tN)*ef2[i]
}
ef2
N3 <- 100
tN <- 2*N3
ef3 <- 1/tN
for (i in 1:200) {
ef3[i+1] <- 1/tN + (1-1/tN)*ef3[i]
}
ef3
N4 <- 500
tN <- 2*N4
ef4 <- 1/tN
for (i in 1:200) {
ef4[i+1] <- 1/tN + (1-1/tN)*ef4[i]
}
ef4
plot(1:201, ef1, type = "l")
points(1:201, ef2, type = "l")
points(1:201, ef3, type = "l")
points(1:201, ef4, type = "l")
plot(1:201, ef1, type = "l", col="red")
points(1:201, ef2, type = "l", col="yellow")
points(1:201, ef3, type = "l", col="green")
points(1:201, ef4, type = "l", col="blue")
pedDF <- data.frame(
id = c("Levi", "Leona", "Rosalynne", "Ben", "Leroy", "Gina", "Jacklyn", "Matt", "Amy", "Austin", "Floyd"),
dadid = c(NA, NA, "Levi", "Levi", "Ben", "Ben", "Leroy", "Leroy", "Matt", "Matt", "Austin"),
momid = c(NA, NA, "Leona", "Leona", "Rosalynne", "Rosalynne", "Gina", "Gina", "Jacklyn", "Jacklyn", "Amy"),
sex = c("male", "female", "female", "male", "male", "female", "female", "male", "female", "male", "male")
)
pedigreeObject <- with(pedDF, pedigree(id,dadid,momid,sex))
plot(pedigreeObject)
library(kinship2)
library(Matrix)
library(quadprog)
library(kinship2)
pedDF <- data.frame(
id = c("Levi", "Leona", "Rosalynne", "Ben", "Leroy", "Gina", "Jacklyn", "Matt", "Amy", "Austin", "Floyd"),
dadid = c(NA, NA, "Levi", "Levi", "Ben", "Ben", "Leroy", "Leroy", "Matt", "Matt", "Austin"),
momid = c(NA, NA, "Leona", "Leona", "Rosalynne", "Rosalynne", "Gina", "Gina", "Jacklyn", "Jacklyn", "Amy"),
sex = c("male", "female", "female", "male", "male", "female", "female", "male", "female", "male", "male")
)
pedigreeObject <- with(pedDF, pedigree(id,dadid,momid,sex))
plot(pedigreeObject)
pedDF <- data.frame(
id = c("Levi", "Leona", "Rosalynne", "Ben", "Jacklyn", "Matt", "Amy", "Austin", "Floyd"),
dadid = c(NA, NA, "Levi", "Levi", "Ben", "Ben", "Matt", "Matt", "Austin"),
momid = c(NA, NA, "Leona", "Leona", "Rosalynne", "Rosalynne", "Jacklyn", "Jacklyn", "Amy"),
sex = c("male", "female", "female", "male", "female", "male", "female", "male", "male")
)
pedigreeObject <- with(pedDF, pedigree(id,dadid,momid,sex))
plot(pedigreeObject)
F_ln <- 0
F_lv <- 0
F_j <- (1/2)^3*(2+F_lv) + (1/2)^3*(2+F_ln)
F_m <- (1/2)^3*(2+F_lv) + (1/2)^3*(2+F_ln)
F_f <- (1/2)^3*(2+F_m) + (1/2)^3*(2+F_j)
F_f
F_ln <- 0
F_lv <- 0
F_j <- (1/2)^3*(1+F_lv) + (1/2)^3*(1+F_ln)
F_m <- (1/2)^3*(1+F_lv) + (1/2)^3*(1+F_ln)
F_f <- (1/2)^3*(1+F_m) + (1/2)^3*(1+F_j)
F_f
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/Assignment05_SophieYeonSooKim.Rmd")
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/week06/Assignment06_SophieYeonSooKim.Rmd")
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/week06/Assignment06_SophieYeonSooKim.Rmd")
N1 <- 10
tN <- 2*N1
ef1 <- 1/tN
for (i in 1:200) {
ef1[i+1] <- 1/tN + (1-1/tN)*ef1[i]
}
N2 <- 50
tN <- 2*N2
ef2 <- 1/tN
for (i in 1:200) {
ef2[i+1] <- 1/tN + (1-1/tN)*ef2[i]
}
N3 <- 100
tN <- 2*N3
ef3 <- 1/tN
for (i in 1:200) {
ef3[i+1] <- 1/tN + (1-1/tN)*ef3[i]
}
N4 <- 500
tN <- 2*N4
ef4 <- 1/tN
for (i in 1:200) {
ef4[i+1] <- 1/tN + (1-1/tN)*ef4[i]
}
plot(1:201, ef1, type = "l", col="red")
points(1:201, ef2, type = "l", col="yellow")
points(1:201, ef3, type = "l", col="green")
points(1:201, ef4, type = "l", col="blue")
legend("topright", c("N = 10","N = 50", "N = 100", "N = 500"), pch = c(1, 2, 3, 4), col = c("red", "yellow", "green", "blue"))
legend("topright", c("N = 10","N = 50", "N = 100", "N = 500"), pch = c(16, 19, 19, 16 ), col = c("red", "yellow", "green", "blue"))
legend("topright", c("N = 10","N = 50", "N = 100", "N = 500"), pch = c(20, 20, 20, 20), col = c("red", "yellow", "green", "blue"))
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/week06/Assignment06_SophieYeonSooKim.Rmd")
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/week06/Assignment06_SophieYeonSooKim.Rmd")
n <- 17 + 55 + 12
AA <- 17/n
AG <- 55/n
GG <- 12/n
p <- AA + 0.5*AG
q <- GG + 0.5*AG
HWE <- p^2 + 2*p*q + q^2
HWE
p
q
p^2
obs1 <- c(17, 55, 12)/n
exp1 <- c(0.2809, 0.4982, 0.2209)*n
chi1 <- c()
for(i in 1:3){
chi1[i] <- (obs1[i] - exp1[i]^2) / (exp1[i])
}
sum(chi1)
o1 <- c(17,55,12)
e1 <- c(0.2809*84,0.4982*84,0.2209*84)
chisquare1 <- c()
for(i in 1:3){chisquare1[i] <- (o1[i]-e1[i]^2)/(e1[i])}
sum(chisquare1)
(17/84)^2
17^2/84
q^2
2*p*q
sqrt(17/84)
17/84
obs1 <- c(17, 55, 12)/n
exp1 <- c(0.2809, 0.4982, 0.2209)*n
chi1 <- c()
for(i in 1:3){
chi1[i] <- (obs1[i] - exp1[i]^2) / (exp1[i])
}
sum(chi1) #chi-square=8.30, degrees of freedom=1
1-pchisq(8.30,df=1)
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/week06/Assignment06_SophieYeonSooKim.Rmd")
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/week06/Assignment06_SophieYeonSooKim.Rmd")
o2 <- c(44,13,0)
e2 <- c(44.74,11.51,0.74)
chisquare2 <- c()
for(i in 1:3){chisquare2[i] <- (o2[i]-e2[i]^2)/(e2[i])}
sum(chisquare2) #chi=0.945, df=1
1-pchisq(0.945,df=1) #pvalue=0.33, h-null cannot be rejected
# h-null= there is no relationship between A and T of the Hb gene
o1 <- c(17,55,12)
e1 <- c(0.2809*84,0.4982*84,0.2209*84)
chisquare1 <- c()
for(i in 1:3){chisquare1[i] <- (o1[i]-e1[i]^2)/(e1[i])}
sum(chisquare1) #chi-square=8.30, degrees of freedom=1
1-pchisq(8.30,df=1)
sum1
sum(chisquare1)
1-pchisq(8.3, df = 1)
```
Since pvalue < 0.05, reject the null hypothesis.
1-pchisq(8.3, df = 1)
sum2 <- sum(chi2)
sum2
render("Documents/2016_Spring/Quantitative Methods in Human Genetics/week06/Assignment06_SophieYeonSooKim.Rmd")
setwd("Documents/2016_Spring/Quantitative Methods in Human Genetics/week11/")
pcdata <- read.table("ParentChildHeight.txt", header = TRUE)
parent <- c()
for (i in 1:length(pcdata$parent1)){
parent[i] <- (pcdata[i,1] + pcdata[i,2])/2
}
child <- pcdata$child
slope <- cov(parent, child) / var(parent)
intercept <- mean(child) - slope * mean(parent)
residual <- c()
for (i in 1:length(pcdata$parent1)){
residual[i] <- child[i] - (slope * parent[i] + intercept)
}
residual
temp <- residual^2
head(residual)
head(temp)
sum(temp)
MSresidual <- sum(residual^2) / (length(residual) - 2)
MSresidual
SSxx <- 0
for (i in 1:length(child)){
SSxx <- SSxx + (parent[i] - mean(parent))^2
}
SEreg <- sqrt(MSresidual) / sqrt(SSxx)
SEreg
summary(lm(child ~ parent))
n <- length(pcdata$parent1)
SSyy <- 0
SSres <- 0
for (i in 1:n) {
SSyy <- SSyy + (child[i] - mean(child))^2
SSres <- SSres + (child[i] - (slope * parent[i] + intercept))^2
}
Rsquared <- 1- (SSres / SSyy)
Rsquared
t.test(parent, child)
MSreg <- 0
for (i in 1:n) {
MSreg <- MSreg + (child[i] - mean(child))^2
}
MSregressoin <- MSreg / (n-2)
Fstatistic <- MSresidual / MSregression
MSregression <- MSreg / (n-2)
Fstatistic <- MSresidual / MSregression
Fstatistic
pval <- 1 - pf(Fstatistic, n-2, n-2)
pval
?abline
plot(parent, child, main = "", xlab = "", ylab = "")
abline(intercept, slope)
plot(parent, child, main = "Parent vs. Child Height", xlab = "Parent", ylab = "Child")
abline(intercept, slope)
gm <- read.table("genesMelt.txt")
head(gm)
temp <- read.table("genes.txt")
head(temp)
summary(lm(exprValue ~ gene:time))
summary(lm(gm$exprValue ~ gene:time))
summary(lm(gm$exprValue ~ gm$gene:gm$time))
m1 <- mean(parent)
m2 <- mean(child)
df1 <- n-1
df2 <- n-1
var1 <- var(parent)
var2 <- var(child)
sp <- (df1*var1 + df2*var2) / (df1 + df2)
SE <- sqrt(sp * ( 1/n + 1/n))
t <- (m1 - m2) / SE
tpval <- 1- pt(t, df1+df2) + pt(-t,df1+df2)
tpval
t.test(parent, child)
t.test(parent, child, alternative = "two-sided")
t.test(parent, child, alternative = "two.sided")
t.test(parent, child, alternative = "two.sided", var.equal = T)
t
tpval
pf(t, 200-2)
pf(t, 99, 99)
pf(t, df1, df2)
pt(t, df1+df2)
pt(t)
pt(t, df1, df2)
pt(t, df1)
pt(t, 198)
1- pt(t, df1+df2) + pt(-t,df1+df2)
1 + pt(t, df1+df2) - pt(-t,df1+df2)
render("Assignment11_SophieYeonSooKim.Rmd")
gmdata <- read.table("genesMelt.txt")
head(gmdata)
gmdata <- read.table("genes.txt")
head(gmdata)
gdata <- read.table("genes.txt", header = T)
head(gdata)
apply( g[,2:5], 2, function(x){ summary( lm( x ~ g[,1] ) ) } )
apply( gdata[,2:5], 2, function(x){ summary( lm( x ~ gdata[,1] ) ) } )
gdata <- read.table("genes.txt", header = T)
time <- gdata$time
g1 <- gdata$gene1
g2 <- gdata$gene2
g3 <- gdata$gene3
g4 <- gdata$gene4
summary(lm(g1 ~ time))
gdata$gene1
gdata[,'gene1']
time
?summary(lm)
?lm
